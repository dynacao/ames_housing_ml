summary(housing.model5)
housing.model6 = lm(log(SalePrice) ~ log(GrLivArea) + log(LotArea) + MasVnrArea2 + TotalBsmtSF, data = housing2)
summary(housing.model6)
housing.model6 = lm(log(SalePrice) ~ log(GrLivArea) + log(LotArea) + MasVnrArea2 + log(TotalBsmtSF), data = housing2)
summary(housing2)
housing3 = housing2 %>%
filter(is.na(TotalBsmtSF) == 0)
housing.model6 = lm(log(SalePrice) ~ log(GrLivArea) + log(LotArea) + MasVnrArea2 + log(TotalBsmtSF), data = housing3)
housing3 = housing2 %>%
filter(is.na(TotalBsmtSF) == 0)
housing.model6 = lm(log(SalePrice) ~ log(GrLivArea) + log(LotArea) + MasVnrArea2 + log(TotalBsmtSF), data = housing3)
housing3 = housing2 %>%
filter(is.na(TotalBsmtSF) != 1 )
housing3 = housing2 %>%
filter(is.na(TotalBsmtSF) != 1 )
housing.model6 = lm(log(SalePrice) ~ log(GrLivArea) + log(LotArea) + MasVnrArea2 + log(TotalBsmtSF), data = housing3)
housing3 = housing2 %>%
filter(is.na(TotalBsmtSF) != 1 )
housing.model6 = lm(log(SalePrice) ~ log(GrLivArea) + log(LotArea) + MasVnrArea2 + TotalBsmtSF, data = housing3)
summary(housing.model6)
housing3 = housing2 %>%
filter(is.na(TotalBsmtSF) != 1, TotalBsmtSF == 0)
housing.model6 = lm(log(SalePrice) ~ log(GrLivArea) + log(LotArea) + MasVnrArea2 + log(TotalBsmtSF), data = housing3)
housing3 = housing2 %>%
filter(is.na(TotalBsmtSF) != 1, TotalBsmtSF != 0)
housing.model6 = lm(log(SalePrice) ~ log(GrLivArea) + log(LotArea) + MasVnrArea2 + log(TotalBsmtSF), data = housing3)
summary(housing.model6)
plot(housing.model6)
log(0.0001)
log(0.1)
basement.model = lm(SalePrice ~ TotalBsmtSF, data = housing2)
plot(basement.model)
# Filter out 0 values out
housing3 = housing2 %>%
filter(is.na(TotalBsmtSF) != 1, TotalBsmtSF != 0)
housing.model6 = lm(log(SalePrice) ~ log(GrLivArea) + log(LotArea) + MasVnrArea2 + log(TotalBsmtSF + 1), data = housing3)
summary(housing.model6)
plot(housing.model6)
housing.model6 = lm(log(SalePrice) ~ log(GrLivArea) + log(LotArea) + MasVnrArea2 + log(TotalBsmtSF + 1), data = housing2)
summary(housing.model6)
plot(housing.model6)
housing3 = housing2 %>%
filter(is.na(TotalBsmtSF) != 1)
housing.model6 = lm(log(SalePrice) ~ log(GrLivArea) + log(LotArea) + MasVnrArea2 + log(TotalBsmtSF + 1), data = housing3)
# Filter out 0 values out
# log(x +1)
housing3 = housing2 %>%
filter(is.na(TotalBsmtSF) != 1)
housing.model6 = lm(log(SalePrice) ~ log(GrLivArea) + log(LotArea) + MasVnrArea2 + log(TotalBsmtSF + 1), data = housing3)
>>>>>>> upstream/main
summary(housing.model6)
vif(housing.model6)
plot(housing.model6)
# Check linear regression between SalePrice and PoolArea
pool.model = lm(SalePrice ~ PoolArea, data = housing)
summary(pool.model)
# Get rid of PoolArea
# Check linear regression between SalePrice and YearBuilt, YearRemodAdd
year.model = lm(SalePrice ~ YearBuilt + YearRemodAdd, data = housing4)
# Check linear regression between SalePrice and YearBuilt, YearRemodAdd
year.model = lm(SalePrice ~ YearBuilt + YearRemodAdd, data = housing_df)
summary(year.model)
vif(year.model)
summary(housing4)
# Check linear regression between SalePrice and YearBuilt, YearRemodAdd
year.model = lm(SalePrice ~ YearBuilt + YearRemodAdd, data = housing_df)
summary(year.model)
vif(year.model)
summary(housing_df)
# Year Built and Year Remodeled are significant variables to add
# Check linear regression between SalePrice and YearBuilt, YearRemodAdd
year.model = lm(SalePrice ~ YearBuilt + YearRemodAdd, data = housing_df)
summary(year.model)
vif(year.model)
summary(year.model)
# Year Built and Year Remodeled are significant variables to add
housing.model7 = lm(log(SalePrice) ~ log(GrLivArea) + log(LotArea) + MasVnrArea2 + log(TotalBsmtSF + 1) + log(GarageArea2 + 1) + YearBuilt + YearRemodAdd,  data = housing_df)
summary(housing.model7)
plot(housing.model7)
# Check linear regression between SalePrice and YearBuilt, YearRemodAdd
year.model = lm(SalePrice ~ YearBuilt + YearRemodAdd, data = housing_df)
summary(year.model)
vif(year.model)
summary(year.model)
plot(year.model)
# Year Built and Year Remodeled are significant variables to add
anova(housing.model7, housing.model6, test = 'Chisq')
# Check linear regression between SalePrice and MoSold, YrSold
sold.model = lm(SalePrice ~ MoSold + YrSold, data = housing_df)
summary(sold.model)
plot(sold.model)
# Month and Year sold - irrelevant
# Check linear regression between SalePrice and OverallQual, OverallCond
quality.model = lm(SalePrice ~ OverallQual + OverallCond, housing_df)
summary(quality.model)
plot(quality.model)
housing.model8 = lm(log(SalePrice) ~ log(GrLivArea) + log(LotArea) + MasVnrArea2 + log(TotalBsmtSF + 1) + log(GarageArea2 + 1) + YearBuilt + YearRemodAdd + OverallQual + OverallCond,  data = housing_df)
summary(housing.model8)
plot(housing.model8)
anova(housing.model8, housing.model7, test = 'Chisq')
# Multiple R-Squared too lage?
housing.model9 = lm(log(SalePrice) ~ log(GrLivArea) + log(LotArea) + MasVnrArea2 + log(TotalBsmtSF + 1) + log(GarageArea2 + 1) + YearBuilt + YearRemodAdd + OverallQual + log(X1stFlrSF) + log(X2ndFlrSF + 1),  data = housing_df)
summary(housing.model9)
plot(housing.model9)
anova(housing.model12, housing.model11, test = 'Chisq')
anova(housing.model12, housing.model11, test = 'Chisq')
anova(housing.model8, housing.model7, test = 'Chisq')
# Multiple R-Squared too lage?
anova(housing.model12, housing.model11, test = 'Chisq')
anova(housing.model8, housing.model9, test = 'Chisq')
vif(housing.model9)
# Multicolinearity - Remove 1stFlrSF and 2ndFlrSF
# Model with GrLivArea
housing.model10 = lm(log(SalePrice) ~ log(GrLivArea) + log(LotArea) + MasVnrArea2 + log(TotalBsmtSF + 1) + log(GarageArea2 + 1) + YearBuilt + YearRemodAdd + OverallQual, data = housing_df)
summary(housing.model10)
vif(housing.model10)
# Model with total_room
housing.model11 = lm(log(SalePrice) ~ log(LotArea) + MasVnrArea2 + log(TotalBsmtSF + 1) + log(GarageArea2 + 1) + YearBuilt + YearRemodAdd + OverallQual + total_room, data = housing_df)
housing_garage.model = lm(log(SalePrice) ~ GarageAre, data = housing_df)
housing_garage.model = lm(log(SalePrice) ~ GarageArea, data = housing_df)
summary(housing_garage.model)
housing_garage.model = lm(log(SalePrice) ~ GarageArea + GarageType + GarageQual + GarageCond + , data = housing_df)
ggplot(housing3, aes(x=GarageArea,y=SalePrice)) + geom_point(aes(color=GarageType,shape=PavedDrive)) + geom_smooth(method = 'lm',formula = y~x)
housing_garage.model = lm(log(SalePrice) ~ GarageArea + GarageType + GarageQual + GarageCond + GarageCars + PavedDrive, data = housing_df)
summary(housing_garage.model)
ggplot(housing3,aes(x=PavedDrive))+geom_bar()
housing_kitchen.model = lm(log(SalePrice) ~ KitchenAbvGr + KitchenQual, data = housing3)
summary(housing_kitchen.model)
housing_woodDeck.model = lm(log(SalePrice) ~ WoodDeckSF, data = housing3)
summary(housing_woodDeck.model)
housing_porch.model = lm(SalePrice ~ OpenPorchSF + EnclosedPorch + X3SsnPorch + ScreenPorch, data = housing3)
summary(housing_woodDeck.model)
housing_porch.model = lm(SalePrice ~ OpenPorchSF + EnclosedPorch + X3SsnPorch + ScreenPorch, data = housing3)
summary(housing_porch.model)
housing_garage.model = lm(SalePrice ~ log(GrLivArea) + log(LotArea) + MasVnrArea2 + log(TotalBsmtSF + 1) + log(GarageArea2 + 1) + YearBuilt + YearRemodAdd + OverallQual + log(X1stFlrSF) + log(X2ndFlrSF + 1) + GarageArea + GarageType + GarageQual + GarageCond + GarageCars + PavedDrive, data = housing3)
summary(housing_garage.model)
housing_kitchen.model = lm(SalePrice ~ log(GrLivArea) + log(LotArea) + MasVnrArea2 + log(TotalBsmtSF + 1) + log(GarageArea2 + 1) + YearBuilt + YearRemodAdd + OverallQual + log(X1stFlrSF) + log(X2ndFlrSF + 1) + KitchenAbvGr + KitchenQual, data = housing3)
summary(housing_kitchen.model)
housing_woodDeck.model = lm(SalePrice ~ log(GrLivArea) + log(LotArea) + MasVnrArea2 + log(TotalBsmtSF + 1) + log(GarageArea2 + 1) + YearBuilt + YearRemodAdd + OverallQual + log(X1stFlrSF) + log(X2ndFlrSF + 1) + WoodDeckSF, data = housing3)
summary(housing_woodDeck.model)
housing_porch.model = lm(SalePrice ~ log(GrLivArea) + log(LotArea) + MasVnrArea2 + log(TotalBsmtSF + 1) + log(GarageArea2 + 1) + YearBuilt + YearRemodAdd + OverallQual + log(X1stFlrSF) + log(X2ndFlrSF + 1) + OpenPorchSF + EnclosedPorch + X3SsnPorch + ScreenPorch, data = housing3)
summary(housing_porch.model)
housing_garage.model = lm(SalePrice ~ log(total_LivArea) + log(LotArea) + MasVnrArea2 + log(TotalBsmtSF + 1) + log(GarageArea2 + 1) + YearBuilt + YearRemodAdd + OverallQual + num_bathroom + GarageArea + GarageType + GarageQual + GarageCond + GarageCars + PavedDrive, data = housing3)
summary(housing_garage.model)
housing_kitchen.model = lm(SalePrice ~ log(total_LivArea) + log(LotArea) + MasVnrArea2 + log(TotalBsmtSF + 1) + log(GarageArea2 + 1) + YearBuilt + YearRemodAdd + OverallQual + num_bathroom + KitchenAbvGr + KitchenQual, data = housing3)
summary(housing_kitchen.model)
housing_woodDeck.model = lm(SalePrice ~ log(total_LivArea) + log(LotArea) + MasVnrArea2 + log(TotalBsmtSF + 1) + log(GarageArea2 + 1) + YearBuilt + YearRemodAdd + OverallQual + num_bathroom + WoodDeckSF, data = housing3)
summary(housing_woodDeck.model)
housing_porch.model = lm(SalePrice ~ log(total_LivArea) + log(LotArea) + MasVnrArea2 + log(TotalBsmtSF + 1) + log(GarageArea2 + 1) + YearBuilt + YearRemodAdd + OverallQual + num_bathroom + OpenPorchSF + EnclosedPorch + X3SsnPorch + ScreenPorch, data = housing3)
summary(housing_porch.model)
housing_garage.model = lm(SalePrice ~ log(total_LivArea) + log(LotArea) + MasVnrArea2 + log(TotalBsmtSF + 1) + log(GarageArea2 + 1) + YearBuilt + YearRemodAdd + OverallQual + num_bathroom + GarageArea + GarageType + GarageQual + GarageCond + GarageCars + PavedDrive + GarageYrBlt, data = housing3)
summary(housing_garage.model)
# Total_LivArea
housing.model15 = lm(log(SalePrice) ~ log(total_LivArea) + log(LotArea) + MasVnrArea2 + log(TotalBsmtSF + 1) + log(GarageArea2 + 1) + YearBuilt + YearRemodAdd + OverallQual, data = housing7)
# Model with GrLivArea
housing.model10 = lm(log(SalePrice) ~ log(GrLivArea) + log(LotArea) + MasVnrArea2 + log(TotalBsmtSF + 1) + log(GarageArea2 + 1) + YearBuilt + YearRemodAdd + OverallQual, data = housing_df)
summary(housing.model10)
vif(housing.model10)
# Model with total_room
housing.model11 = lm(log(SalePrice) ~ log(LotArea) + MasVnrArea2 + log(TotalBsmtSF + 1) + log(GarageArea2 + 1) + YearBuilt + YearRemodAdd + OverallQual + total_room, data = housing_df)
# Total_LivArea
housing.model15 = lm(log(SalePrice) ~ log(total_LivArea) + log(LotArea) + MasVnrArea2 + log(TotalBsmtSF + 1) + log(GarageArea2 + 1) + YearBuilt + YearRemodAdd + OverallQual, data = housing7)
# Total_LivArea
housing.model15 = lm(log(SalePrice) ~ log(total_LivArea) + log(LotArea) + MasVnrArea2 + log(TotalBsmtSF + 1) + log(GarageArea2 + 1) + YearBuilt + YearRemodAdd + OverallQual, data = housing_df)
summary(housing.model15)
vif(housing.model15)
housing.model16 = lm(log(SalePrice) ~ log(total_LivArea) + log(LotArea) + MasVnrArea2 + log(TotalBsmtSF + 1) + log(GarageArea2 + 1) + YearBuilt + YearRemodAdd + OverallQual + num_bathroom, data = housing7)
<<<<<<< HEAD
housing_garage.model2 = lm(SalePrice ~ GarageArea + GarageType + GarageQual + GarageCond + GarageCars + PavedDrive + GarageYrBlt, data = housing3)
summary(housing_garage.model2)
housing_garage.model3 = lm(SalePrice ~ log(total_LivArea) + log(LotArea) + MasVnrArea2 + log(TotalBsmtSF + 1) + YearBuilt + YearRemodAdd + OverallQual + num_bathroom + GarageArea + GarageType + GarageQual + GarageCond + GarageCars + PavedDrive + GarageYrBlt, data = housing3)
summary(housing_garage.model3)
ggplot(housing3) + geom_bar(aes(x=KitchenAbvGr,fill = KitchenQual),position = 'dodge')
ggplot(housing3,aes(x = KitchenQual, y = SalePrice)) + geom_boxplot() + facet_grid(~ KitchenAbvGr) # sales price vs. kitchen qual and number of kitchen
# ggplot(housing3,aes(y=SalePrice)) + geom_point(aes(x=OpenPorchSF, color = 'red'))+geom_point(aes(x=EnclosedPorch, color='blue'))+geom_point(aes(x=X3SsnPorch
# , color = 'green'))+geom_point(aes(x=ScreenPorch, color = 'purple'))
ggplot(housing3,aes(x = Functional, y = SalePrice)) + geom_boxplot() # sales price vs. functional
ggplot(housing3,aes(x = MiscFeature, y = SalePrice)) + geom_boxplot()  # sales price vs. Miscellaneous feature
ggplot(housing3,aes(x = Fence, y = SalePrice)) + geom_boxplot()    # sales price vs. fence
ggplot(housing3, aes(x = FireplaceQu, y = SalePrice)) + geom_boxplot() + facet_grid(~ Fireplaces)  # sales price vs. fireplaces
ggplot(housing3,aes(x=GarageYrBlt,y=SalePrice)) + geom_point(position = 'jitter', alpha = 0.3)    # sales price vs. Garage Year Built
ggplot(housing3) + geom_boxplot(aes(x=GarageType,y=SalePrice,fill=GarageQual))
ggplot(housing3, aes(x=GarageArea,y=SalePrice)) + geom_point(aes(color=GarageType)) + geom_smooth(method = 'lm',formula = y~x) # sales price vs. Garage Type
ggplot(housing3, aes(x=GarageArea,y=SalePrice)) + geom_point(aes(color=GarageType,shape=GarageQual)) + geom_smooth(method = 'lm',formula = y~x) # + garage qual
ggplot(housing3, aes(x=GarageArea,y=SalePrice)) + geom_point(aes(color=GarageType,shape=PavedDrive)) + geom_smooth(method = 'lm',formula = y~x)
ggplot(housing3) + geom_bar(aes(x=TotRmsAbvGrd),position = 'dodge')
ggplot(housing3,aes(x=TotRmsAbvGrd,y=SalePrice)) + geom_point() + geom_smooth(method = 'lm',formula = y~x) # Total Room Number vs. Price
# Porch
ggplot(housing3,aes(y=SalePrice)) + geom_point(aes(x=OpenPorchSF))
ggplot(housing3,aes(y=SalePrice)) + geom_point(aes(x=EnclosedPorch))
ggplot(housing3,aes(y=SalePrice)) + geom_point(aes(x=X3SsnPorch))
ggplot(housing3,aes(y=SalePrice)) + geom_point(aes(x=ScreenPorch))
housing3 %>% group_by(YrSold) %>% count(MoSold) %>% ggplot(aes(MoSold,n))+geom_line() + facet_grid(~ YrSold) # house sold for different year
ggplot(housing3,aes(MoSold,SalePrice))+geom_point() + facet_grid(~ YrSold)
housing_garage.model = lm(log(SalePrice) ~ log(total_LivArea) + log(LotArea) + MasVnrArea2 + log(TotalBsmtSF + 1) + log(GarageArea2 + 1) + YearBuilt + YearRemodAdd + OverallQual + num_bathroom + GarageType + GarageQual + GarageCond + GarageCars + PavedDrive + GarageYrBlt, data = housing3)
summary(housing_garage.model)
housing_garage.model = lm(log(SalePrice) ~ log(total_LivArea) + log(LotArea) + MasVnrArea2 + log(TotalBsmtSF + 1) + log(GarageArea2 + 1) + YearBuilt + YearRemodAdd + OverallQual + num_bathroom + PavedDrive + GarageYrBlt, data = housing3)
summary(housing_garage.model)
housing_garage.model = lm(log(SalePrice) ~ log(total_LivArea) + log(LotArea) + MasVnrArea2 + log(TotalBsmtSF + 1) + log(GarageArea2 + 1) + YearBuilt + YearRemodAdd + OverallQual + num_bathroom + GarageType + GarageQual + PavedDrive + GarageYrBlt, data = housing3)
summary(housing_garage.model)
housing_garage.model = lm(log(SalePrice) ~ log(total_LivArea) + log(LotArea) + MasVnrArea2 + log(TotalBsmtSF + 1) + log(GarageArea2 + 1) + YearBuilt + YearRemodAdd + OverallQual + num_bathroom + GarageQual + PavedDrive + GarageYrBlt, data = housing3)
summary(housing_garage.model)
housing_woodDeck.model = lm(log(SalePrice) ~ log(total_LivArea) + log(LotArea) + MasVnrArea2 + log(TotalBsmtSF + 1) + log(GarageArea2 + 1) + YearBuilt + YearRemodAdd + OverallQual + num_bathroom + WoodDeckSF, data = housing3)
summary(housing_woodDeck.model)
housing_porch.model = lm(log(SalePrice) ~ log(total_LivArea) + log(LotArea) + MasVnrArea2 + log(TotalBsmtSF + 1) + log(GarageArea2 + 1) + YearBuilt + YearRemodAdd + OverallQual + num_bathroom + OpenPorchSF + EnclosedPorch + X3SsnPorch + ScreenPorch, data = housing3)
summary(housing_porch.model)
=======
# Do we include Average Rec Room (Rec) as livable area
housing7 = housing6 %>%
mutate(BasmtFinSF1 = ifelse(BsmtFinType1 == 'GLQ' | BsmtFinType1 == 'ALQ', BsmtFinSF1, 0)) %>%
mutate(BasmtFinSF2 = ifelse(BsmtFinType2 == 'GLQ' | BsmtFinType2 =='ALQ', BsmtFinSF2, 0)) %>%
mutate(BasmtFinSF = BasmtFinSF1 + BasmtFinSF2) %>%
mutate(total_LivArea = GrLivArea + BasmtFinSF) %>%
mutate(num_bathroom = BsmtHalfBath2 + HalfBath2 + FullBath + BsmtFullBath)
housing.model16 = lm(log(SalePrice) ~ log(total_LivArea) + log(LotArea) + MasVnrArea2 + log(TotalBsmtSF + 1) + log(GarageArea2 + 1) + YearBuilt + YearRemodAdd + OverallQual + num_bathroom, data = housing7)
summary(housing.model16)
summary(housing.model15)
housing.model16 = lm(log(SalePrice) ~ log(total_LivArea) + log(LotArea) + MasVnrArea2 + log(TotalBsmtSF + 1) + log(GarageArea2 + 1) + YearBuilt + YearRemodAdd + OverallQual + num_bathroom, data = housing7)
summary(housing.model16)
vif(housing.model16)
knitr::opts_chunk$set(echo = TRUE)
str(housing)
knitr::opts_chunk$set(echo = TRUE)
housing = read.csv('Ames_HousePrice.csv', header = TRUE)
real_estate = read.csv('data/Ames_Real_Estate_Data.csv')
str(housing)
# Remove NA values in MasVnrArea
housing1 =housing %>%
select(SalePrice, GrLivArea, LotArea, MasVnrArea, YearBuilt) %>%
filter(is.na(MasVnrArea))
library(tidyverse)
# Remove NA values in MasVnrArea
housing1 =housing %>%
select(SalePrice, GrLivArea, LotArea, MasVnrArea, YearBuilt) %>%
filter(is.na(MasVnrArea))
# Remove NA values in TotalBsmtSF
housing2 = housing1 %>%
filter(is.na(TotalBsmtSF) != 1)
housing = read.csv('Ames_HousePrice.csv', header = TRUE)
library(tidyverse)
# Remove NA values in MasVnrArea
housing1 = housing %>%
filter(is.na(MasVnrArea))
# Remove NA values in TotalBsmtSF
housing2 = housing1 %>%
filter(is.na(TotalBsmtSF) != 1)
# Final Data Set with all the NA values handled
housing_df = housing2
housing3 = housing2 %>%
filter(is.na(MasVnrArea) != 1) %>%
mutate(MasVnrArea2 = case_when(
MasVnrArea == 0 ~ 0,
MasVnrArea != 0 ~ 1,
))
View(housing3)
library(car)
# Create new columns for better modeling
housing3 = housing2 %>%
filter(is.na(MasVnrArea) != 1) %>%
mutate(
MasVnrArea2 = case_when(
MasVnrArea == 0 ~ 0,
MasVnrArea != 0 ~ 1),
GarageArea2 = ifelse(is.na(GarageArea), 0, GarageArea),
PoolArea2 = ifelse(is.na(PoolArea), 0, PoolArea),
PoolArea3 = ifelse(is.na(PoolArea), 0, 1),
X2ndFlrSF = ifelse(is.na(X2ndFlrSF), 0, X2ndFlrSF),
HalfBath2 = case_when(
HalfBath == 1 ~ 0.5,
HalfBath == 0 ~ 0),
BsmtHalfBath2 = case_when(
BsmtHalfBath == 1 ~ 0.5,
BsmtHalfBath == 0 ~ 0),
# If Basement Finish Type1 is GLQ or ALQ, we use the Basement Finish Square Feet1
BasmtFinSF1 = ifelse(BsmtFinType1 == 'GLQ' | BsmtFinType1 == 'ALQ', BsmtFinSF1, 0),
# If Basement Finish Type2 is GLQ or ALQ, we use the Basement Finish Square Feet2
BasmtFinSF2 = ifelse(BsmtFinType2 == 'GLQ' | BsmtFinType2 =='ALQ', BsmtFinSF2, 0),
# The Total Square Feet of Basement Finish is BasmtFinSF1 + BasmtFinSF2
BasmtFinSF = BasmtFinSF1 + BasmtFinSF2,
# Total Living Area is GrLivArea + BasmtFinSF
total_LivArea = GrLivArea + BasmtFinSF,
num_bathroom = BsmtHalfBath2 + HalfBath2 + FullBath + BsmtFullBath
)
housing_df = housing3
housing.model = lm(SalePrice ~ ., data = housing_df)
housing.model = lm(SalePrice ~ ., data = housing_df)
housing.model = lm(SalePrice ~ ., data = housing)
summary(housing.model)
housing.model2 = lm(SalePrice ~ GrLivArea + LotArea + Neighborhood + Condition1 + Condition2 + OverallQual + OverallCond + YearBuilt + RoofMatl + MasVnrType + MasVnrArea + ExterQual + BsmtFinSF2 + BsmtUnfSF + BedroomAbvGr + KitchenQual + Fireplaces + FireplaceQu, data = housing)
summary(housing.model2)
plot(housing.model2)
# Basic model - starting line
housing.model = lm(log(SalePrice) ~ log(GrLivArea) + LotArea + MasVnrArea, data = housing_df)
housing = read.csv('Ames_HousePrice.csv', header = TRUE)
real_estate = read.csv('data/Ames_Real_Estate_Data.csv')
library(tidyverse)
# Remove NA values in MasVnrArea
housing1 = housing %>%
filter(is.na(MasVnrArea))
library(tidyverse)
# Remove NA values in MasVnrArea
housing1 = housing %>%
filter(is.na(MasVnrArea) != 1)
# Remove NA values in TotalBsmtSF
housing2 = housing1 %>%
filter(is.na(TotalBsmtSF) != 1)
library(car)
# Create new columns for better modeling
housing3 = housing2 %>%
filter(is.na(MasVnrArea) != 1) %>%
mutate(
MasVnrArea2 = case_when(
MasVnrArea == 0 ~ 0,
MasVnrArea != 0 ~ 1),
GarageArea2 = ifelse(is.na(GarageArea), 0, GarageArea),
PoolArea2 = ifelse(is.na(PoolArea), 0, PoolArea),
PoolArea3 = ifelse(is.na(PoolArea), 0, 1),
X2ndFlrSF = ifelse(is.na(X2ndFlrSF), 0, X2ndFlrSF),
HalfBath2 = case_when(
HalfBath == 1 ~ 0.5,
HalfBath == 0 ~ 0),
BsmtHalfBath2 = case_when(
BsmtHalfBath == 1 ~ 0.5,
BsmtHalfBath == 0 ~ 0),
# If Basement Finish Type1 is GLQ or ALQ, we use the Basement Finish Square Feet1
BasmtFinSF1 = ifelse(BsmtFinType1 == 'GLQ' | BsmtFinType1 == 'ALQ', BsmtFinSF1, 0),
# If Basement Finish Type2 is GLQ or ALQ, we use the Basement Finish Square Feet2
BasmtFinSF2 = ifelse(BsmtFinType2 == 'GLQ' | BsmtFinType2 =='ALQ', BsmtFinSF2, 0),
# The Total Square Feet of Basement Finish is BasmtFinSF1 + BasmtFinSF2
BasmtFinSF = BasmtFinSF1 + BasmtFinSF2,
# Total Living Area is GrLivArea + BasmtFinSF
total_LivArea = GrLivArea + BasmtFinSF,
num_bathroom = BsmtHalfBath2 + HalfBath2 + FullBath + BsmtFullBath
)
# Final Data set after cleaning
housing_df = housing3
# Basic model - starting line
housing.model = lm(log(SalePrice) ~ log(GrLivArea) + LotArea + MasVnrArea, data = housing_df)
summary(housing.model4)
plot(housing.model4)
# Basic model - starting line
housing.model = lm(log(SalePrice) ~ log(GrLivArea) + LotArea + MasVnrArea, data = housing_df)
summary(housing.model)
plot(housing.model)
housing.model2 = lm(log(SalePrice) ~ log(GrLivArea) + log(LotArea) + MasVnrArea2, data = housing_df)
summary(housing.model2)
plot(housing.model2)
vif(housing.model2)
knitr::opts_chunk$set(echo = TRUE)
housing.model7 = lm(log(SalePrice) ~ log(GrLivArea) + log(LotArea) + MasVnrArea2 + log(TotalBsmtSF + 1) + log(GarageArea2 + 1) + YearBuilt + YearRemodAdd,  data = housing_df)
summary(housing.model7)
plot(housing.model7)
# Model with GrLivArea
housing.model10 = lm(log(SalePrice) ~ log(GrLivArea) + log(LotArea) + MasVnrArea2 + log(TotalBsmtSF + 1) + log(GarageArea2 + 1) + YearBuilt + YearRemodAdd + OverallQual, data = housing_df)
summary(housing.model10)
vif(housing.model10)
# Model with total_room
housing.model11 = lm(log(SalePrice) ~ log(LotArea) + MasVnrArea2 + log(TotalBsmtSF + 1) + log(GarageArea2 + 1) + YearBuilt + YearRemodAdd + OverallQual + total_room, data = housing_df)
summary(housing.model14)
# Model with GrLivArea
housing.model10 = lm(log(SalePrice) ~ log(GrLivArea) + log(LotArea) + MasVnrArea2 + log(TotalBsmtSF + 1) + log(GarageArea2 + 1) + YearBuilt + YearRemodAdd + OverallQual, data = housing_df)
summary(housing.model10)
vif(housing.model10)
str(housing_df)
knitr::opts_chunk$set(echo = TRUE)
housing2 %>%filter(is.na(MasVnrArea) != 1)
library(tidyverse)
housing2 %>%filter(is.na(MasVnrArea) != 1)
ggplot(housing_df, aes(x = MasVnrTypem, y = SalePrice)) +
geom_bar()
ggplot(housing_df, aes(x = MasVnrType, y = SalePrice)) +
geom_bar()
geom_bar(stat = 'identity)
ggplot(housing_df, aes(x = MasVnrType, y = SalePrice)) +
geom_bar(stat = 'identity')
ggplot(housing_df, aes(x = MasVnrType, y = SalePrice)) +
geom_col()
housing_df %>%
group_by(MasVnrType) %>%
summarise(mean_MasVnrType = mean(SalePrice)) %>%
ggplot(housing_df, aes(x = MasVnrType, y = SalePrice)) +
geom_col()
housing_df %>%
group_by(MasVnrType) %>%
summarise(mean_MasVnrType = mean(SalePrice))
housing_df %>%
group_by(MasVnrType) %>%
summarise(mean_MasVnrType = mean(SalePrice)) %>%
ggplot(aes(x = MasVnrType, y = mean_MasVnrType)) +
geom_col()
# ExterQual
housing_df %>%
group_by(ExterQual) %>%
summarise(mean_ExterQual = mean(SalePrice)) %>%
ggplot(aes(x = MasVnrType, y = mean_ExterQual)) +
geom_col()
# ExterQual
housing_df %>%
group_by(ExterQual) %>%
summarise(mean_ExterQual = mean(SalePrice)) %>%
ggplot(aes(x = ExterQual, y = mean_ExterQual)) +
geom_col()
# ExterCond
housing_df %>%
group_by(ExterCond) %>%
summarise(mean_ExterCond = mean(SalePrice)) %>%
ggplot(aes(x = ExterCond, y = mean_ExterCond)) +
geom_col()
# ExterQual
housing_df %>%
group_by(ExterQual) %>%
summarise(mean_ExterQual = mean(SalePrice)) %>%
ggplot(aes(x = ExterQual, y = mean_ExterQual)) +
geom_col()
# Foundation
housing_df %>%
group_by(Foundation) %>%
summarise(mean_Foundation = mean(SalePrice)) %>%
ggplot(aes(x = Foundation, y = mean_Foundation)) +
geom_col()
# BsmtQual
housing_df %>%
group_by(BsmtQual) %>%
summarise(mean_BsmtQual = mean(SalePrice)) %>%
ggplot(aes(x = BsmtQual, y = mean_BsmtQual)) +
geom_col()
# BsmtCond
housing_df %>%
group_by(BsmtCond) %>%
summarise(mean_BsmtCond = mean(SalePrice)) %>%
ggplot(aes(x = BsmtCond, y = mean_BsmtCond)) +
geom_col()
# BsmtExposure
housing_df %>%
group_by(BsmtExposure) %>%
summarise(mean_BsmtExposure = mean(SalePrice)) %>%
ggplot(aes(x = BsmtExposure, y = mean_BsmtExposure)) +
geom_col()
# BsmtExposure
housing_df %>%
group_by(BsmtExposure) %>%
summarise(mean_BsmtExposure = mean(SalePrice)) %>%
ggplot(aes(x = BsmtExposure, y = mean_BsmtExposure)) +
geom_col()
# BsmtExposure
housing_df %>%
group_by(BsmtExposure) %>%
summarise(mean_BsmtExposure = mean(SalePrice)) %>%
ggplot(aes(x = BsmtExposure, y = mean_BsmtExposure)) +
geom_col()
# BsmtFinType1
housing_df %>%
group_by(BsmtFinType1) %>%
summarise(mean_BsmtFinType1 = mean(SalePrice)) %>%
ggplot(aes(x = BsmtFinType1, y = mean_BsmtFinType1)) +
geom_col()
# BsmtFinType2
housing_df %>%
group_by(BsmtFinType2) %>%
summarise(mean_BsmtFinType2 = mean(SalePrice)) %>%
ggplot(aes(x = BsmtFinType2, y = mean_BsmtFinType2)) +
geom_col()
# Heating
housing_df %>%
group_by(Heating) %>%
summarise(mean_Heating = mean(SalePrice)) %>%
ggplot(aes(x = Heating, y = mean_Heating)) +
geom_col()
# HeatingQC
housing_df %>%
group_by(HeatingQC) %>%
summarise(mean_HeatingQC = mean(SalePrice)) %>%
ggplot(aes(x = HeatingQC, y = mean_HeatingQC)) +
geom_col()
# CentralAir
housing_df %>%
group_by(CentralAir) %>%
summarise(mean_CentralAir = mean(SalePrice)) %>%
ggplot(aes(x = CentralAir, y = mean_CentralAir)) +
geom_col()
# Electrical
housing_df %>%
group_by(Electrical) %>%
summarise(mean_Electrical = mean(SalePrice)) %>%
ggplot(aes(x = Electrical, y = mean_Electrical)) +
geom_col()
View(real_estate)
housing.model9 = lm(log(SalePrice) ~ log(GrLivArea) + log(LotArea) + MasVnrArea2 + log(TotalBsmtSF + 1) + log(GarageArea2 + 1) + YearBuilt + YearRemodAdd + OverallQual + log(X1stFlrSF) + log(X2ndFlrSF + 1),  data = housing_df)
summary(housing.model9)
plot(housing.model9)
<<<<<<< HEAD
<<<<<<< HEAD
>>>>>>> upstream/main
=======
>>>>>>> upstream/main
=======
>>>>>>> upstream/main
View(housing_df)
knitr::opts_chunk$set(echo = TRUE)
# CentralAir
housing_df %>%
group_by(CentralAir) %>%
summarise(mean_CentralAir = mean(SalePrice)) %>%
ggplot(aes(x = CentralAir, y = mean_CentralAir)) +
geom_col()
# CentralAir
library(tidyverse)
housing_df %>%
group_by(CentralAir) %>%
summarise(mean_CentralAir = mean(SalePrice)) %>%
ggplot(aes(x = CentralAir, y = mean_CentralAir)) +
geom_col()
